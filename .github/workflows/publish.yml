name: NPM Package

on:
  push:
    branches: [ master ]

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm install
      - name: Extract version
        run: |
          OLD_VERSION=$(npm show wavesurfer.js version)
          NEW_VERSION=$(node -p 'require("./package.json").version')
          if [ $NEW_VERSION != $OLD_VERSION ]; then
            echo $NEW_VERSION > version.txt
            echo "New version $NEW_VERSION detected"
          else
            echo "Version $OLD_VERSION hasn't changed, skipping the release"
          fi
      - name: Create a git tag
        run: |
          if [ -f version.txt ]; then
            echo "Creating a git tag"
            git tag $(cat version.txt)
            git push --tags
          fi
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
        run: |
          if [ -f version.txt ]; then
            echo "Publishing to NPM"
            npm publish
          fi
      - name: Release on GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f version.txt ]; then
            NEW_VERSION=$(cat version.txt)
            echo "Releasing $NEW_VERSION on GitHub"
            curl \
              -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              'https://api.github.com/repos/katspaugh/wavesurfer.js/releases' \
              -d "{\"tag_name\":\"$NEW_VERSION\", \"name\": \"$NEW_VERSION\"}"
          fi
